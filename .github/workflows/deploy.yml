name: Deploy to Google Cloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  ARTIFACT_REGISTRY: us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cache-app
  K8S_NAMESPACE: dev
  K8S_CLUSTER: development-cluster
  K8S_REGION: us-west1
  BASTION_HOST: 34.127.93.169

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker us-west1-docker.pkg.dev

    - name: Build and Push Docker image
      run: |
        cd cache_app_demo
        docker build -t ${{ env.ARTIFACT_REGISTRY }}/cache-app-dev:${{ github.sha }} .
        docker push ${{ env.ARTIFACT_REGISTRY }}/cache-app-dev:${{ github.sha }}

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ env.BASTION_HOST }} >> ~/.ssh/known_hosts

    - name: Get GKE credentials through bastion
      run: |
        ssh -f -N -L 6443:$(gcloud container clusters describe ${{ env.K8S_CLUSTER }} --region ${{ env.K8S_REGION }} --project ${{ secrets.GCP_PROJECT_ID }} --format="value(endpoint)"):443 bastion@${{ env.BASTION_HOST }}
        gcloud container clusters get-credentials ${{ env.K8S_CLUSTER }} \
          --region ${{ env.K8S_REGION }} \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --internal-ip

    - name: Deploy to Kubernetes
      run: |
        # Update the image in the deployment manifest
        sed -i "s|image:.*|image: ${{ env.ARTIFACT_REGISTRY }}/cache-app-dev:${{ github.sha }}|" k8s/deployment.yaml
        
        # Apply the Kubernetes manifests
        kubectl apply -f k8s/deployment.yaml

    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/cache-app-demo -n ${{ env.K8S_NAMESPACE }}
        kubectl get pods -n ${{ env.K8S_NAMESPACE }}
